#!/usr/bin/env lua

local shift = '^'   -- prefix of blanks to remove

if arg[1] and arg[1]:find '^%-%d+$' then
  shift = '^' .. string.rep(' ', -tonumber(arg[1]))
  table.remove(arg, 1)
end

local outputs = { } -- map filename to list of lines
setmetatable(outputs, { __index = function(t, k) local u = {}; t[k] = u; return u end })

local function add_modified_line(lines, l)
  if l:find '%{ fact_name%s+=' then
    return
  end
  l = l:gsub('^(%s*),( fact_bot)', '%1{%2')
--  l = l:gsub('^(%s*, fact_join = .*)$', '%1 }')
  l = l:gsub('%s*%-%-%s%^.*$', '')
  return table.insert(lines, l)
end


for _, file in ipairs(arg) do
  local outfile
  for l in io.lines(file) do
    local action, filename = l:match '^%s*%-%-%s%@%s+(%w+)%s+(%S+)%s*$'
    if action == 'start' then
      assert(outfile == nil)
      outfile = filename
    elseif action == 'stop' or action == 'end' then
      assert(outfile == filename)
      outfile = nil
    elseif action ~= nil then
      error("Unknown action '" .. action .. "' in line " .. l)
    else
      if outfile then
        add_modified_line(outputs[outfile], l)
      end
    end
  end
end

for file, lines in pairs(outputs) do
  local f = assert(io.open(file, 'w'))
  local do_shift = true
  for _, l in ipairs(lines) do
    if not l:find(shift) then
      do_shift = false
      break
    end
  end
  for _, l in ipairs(lines) do
    f:write(do_shift and l:gsub(shift, '') or l, '\n')
  end
  f:close()
end

      
      